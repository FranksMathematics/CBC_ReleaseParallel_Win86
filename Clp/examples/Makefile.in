# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Eclipse Public License.

##########################################################################
#    You can modify this example makefile to fit for your own program.   #
#    Usually, you only need to change CHANGEME entries below.            #
##########################################################################

# CHANGEME
# To compile other examples, either change the following line, or add the
# argument DRIVER=filename_without_extension to make, e.g.,
# `make DRIVER=hello'

DRIVER = driver

# CHANGEME
# This should be the name of your executable; change if you want a name
# that's different from the file name.

EXE = $(DRIVER)@EXEEXT@

# CHANGEME
# OBJS should include all object files necessary to build your program. For
# the examples, only one file is needed for each example. You will probably
# have more as your code grows.

OBJS =  $(DRIVER).@OBJEXT@

# CHANGEME
# Additional libraries. The examples require only the COIN-OR libraries specified
# as LIBS below. You may need more.

ADDLIBS =

# CHANGEME
# Additional flags for compilation (e.g., include flags). As for libraries,
# the examples require only COIN-OR include files, specified as part of CXXFLAGS
# below.

ADDINCFLAGS =

# CHANGEME
# Directory to the sources for the (example) problem definition files. VPATH
# is used if you are building in a different directory than the source. This
# can be handy for various reasons; if none occur to you, don't worry about
# it.

SRCDIR = @srcdir@
VPATH = @srcdir@

##########################################################################
#  Usually, you don't have to change anything below.  Note that if you   #
#  change certain compiler options, you might have to recompile the      #
#  package.                                                              #
##########################################################################

# C++ Compiler command
CXX = @CXX@

# C++ Compiler options
CXXFLAGS = @CXXFLAGS@

# C Compiler command
CC = @CC@

# C Compiler options
CFLAGS = @CFLAGS@

# Sample data directory
@COIN_HAS_SAMPLE_TRUE@CXXFLAGS += -DSAMPLEDIR=\"`$(CYGPATH_W) @SAMPLE_DATA@`\"

# Netlib data directory
@COIN_HAS_NETLIB_TRUE@CXXFLAGS += -DNETLIBDIR=\"`$(CYGPATH_W) @NETLIB_DATA@`\"

# additional C++ Compiler options for linking
CXXLINKFLAGS = @RPATH_FLAGS@

# Include directories
@COIN_HAS_PKGCONFIG_TRUE@INCL = `PKG_CONFIG_PATH=@COIN_PKG_CONFIG_PATH@ @PKG_CONFIG@ --cflags clp`
@COIN_HAS_PKGCONFIG_FALSE@INCL = -I@includedir@/coin-or
INCL += $(ADDINCFLAGS)

# Linker flags
@COIN_HAS_PKGCONFIG_TRUE@LIBS = `PKG_CONFIG_PATH=@COIN_PKG_CONFIG_PATH@ @PKG_CONFIG@ --libs clp`
@COIN_HAS_PKGCONFIG_FALSE@LIBS = -L@libdir@ -lClpSolver -lClp
LIBS += $(ADDLIBS)

# The following is necessary under cygwin, if native compilers are used
CYGPATH_W = @CYGPATH_W@

# get some directories, so we can expand @libdir@ and @includedir@
prefix=@prefix@
exec_prefix=@exec_prefix@

# Here we list all possible generated objects or executables to delete them
CLEANFILES = \
	addBits.@OBJEXT@ addBits@EXEEXT@ \
	addColumns.@OBJEXT@ addColumns@EXEEXT@ \
	addRows.@OBJEXT@ addRows@EXEEXT@ \
	decomp2.@OBJEXT@ decomp2@EXEEXT@ \
	decomp3.@OBJEXT@ decomp3@EXEEXT@ \
	decompose.@OBJEXT@ decompose@EXEEXT@ \
	defaults.@OBJEXT@ defaults@EXEEXT@ \
	driver2.@OBJEXT@ driver2@EXEEXT@ \
	driver.@OBJEXT@ driver@EXEEXT@ \
	driverC.@OBJEXT@ driverC@EXEEXT@ \
	dualCuts.@OBJEXT@ dualCuts@EXEEXT@ \
	ekk.@OBJEXT@ ekk@EXEEXT@ \
	ekk_interface.@OBJEXT@ ekk_interface@EXEEXT@ \
	hello.@OBJEXT@ hello@EXEEXT@ \
	makeDual.@OBJEXT@ makeDual@EXEEXT@ \
	minimum.@OBJEXT@ minimum@EXEEXT@ \
	modify.@OBJEXT@ modify@EXEEXT@ \
	network.@OBJEXT@ network@EXEEXT@ \
	pdco.@OBJEXT@ pdco@EXEEXT@ \
	piece.@OBJEXT@ piece@EXEEXT@ \
	rowColumn.@OBJEXT@ rowColumn@EXEEXT@ \
	sprint2.@OBJEXT@ sprint2@EXEEXT@ \
	sprint.@OBJEXT@ sprint@EXEEXT@ \
	testBarrier.@OBJEXT@ testBarrier@EXEEXT@ \
	testBasis.@OBJEXT@ testBasis@EXEEXT@ \
	testGub2.@OBJEXT@ testGub2@EXEEXT@ \
	testGub.@OBJEXT@ testGub@EXEEXT@ \
	testQP.@OBJEXT@ testQP@EXEEXT@ \
	useVolume.@OBJEXT@ useVolume@EXEEXT@

all: $(EXE)

.SUFFIXES: .cpp .c .@OBJEXT@

$(EXE): $(OBJS)
	$(CXX) $(CXXLINKFLAGS) $(CXXFLAGS) -o $@ $< $(LIBS)

clean:
	rm -rf $(CLEANFILES)

.cpp.@OBJEXT@:
	$(CXX) $(CXXFLAGS) $(INCL) -c -o $@ `test -f '$<' || echo '$(SRCDIR)/'`$<

.c.@OBJEXT@:
	$(CC) $(CFLAGS) $(INCL) -c -o $@ `test -f '$<' || echo '$(SRCDIR)/'`$<

